[{"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\index.js":"1","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\polyfills.js":"2","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\App.js":"3","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\reportWebVitals.js":"4","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\Content.js":"5","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\UnauthenticatedContent.js":"6","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\auth.js":"7","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\navigation.js":"8","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\media-query.js":"9","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-routes.js":"10","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\auth.js":"11","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\profile.js":"12","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\index.js":"13","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\index.js":"14","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\api.js":"15","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\index.js":"16","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js":"17","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js":"18","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\single-card\\single-card.js":"19","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\header\\header.js":"20","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\footer\\footer.js":"21","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\login-form\\login-form.js":"22","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\reset-password-form\\reset-password-form.js":"23","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\create-account-form\\create-account-form.js":"24","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\change-password-form\\change-password-form.js":"25","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\side-navigation-menu\\side-navigation-menu.js":"26","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewChannelsComponent\\ViewChannelsComponent.js":"27","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditOptionComponent\\EditOptionComponent.js":"28","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewOptionComponent\\ViewOptionComponent.js":"29","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditBooleanComponent\\EditBooleanComponent.js":"30","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewBooleanComponent\\ViewBooleanComponent.js":"31","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditChannelsComponent\\EditChannelsComponent.js":"32","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\students\\students.js":"33","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\institutions\\institutions.js":"34","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\profile\\profile.js":"35","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-navigation.js":"36","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\patches.js":"37","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\user-panel\\user-panel.js":"38","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\institutions.js":"39","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\students.js":"40","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\home\\home.js":"41","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\options\\index.js":"42"},{"size":540,"mtime":1607407885254,"results":"43","hashOfConfig":"44"},{"size":72,"mtime":1607407885269,"results":"45","hashOfConfig":"44"},{"size":1134,"mtime":1607407885216,"results":"46","hashOfConfig":"44"},{"size":375,"mtime":1607407885269,"results":"47","hashOfConfig":"44"},{"size":788,"mtime":1607941799141,"results":"48","hashOfConfig":"44"},{"size":1147,"mtime":1607407885218,"results":"49","hashOfConfig":"44"},{"size":1469,"mtime":1607949164947,"results":"50","hashOfConfig":"44"},{"size":839,"mtime":1607407885251,"results":"51","hashOfConfig":"44"},{"size":1581,"mtime":1607407885294,"results":"52","hashOfConfig":"44"},{"size":587,"mtime":1607740534364,"results":"53","hashOfConfig":"44"},{"size":1692,"mtime":1607945618997,"results":"54","hashOfConfig":"44"},{"size":173,"mtime":1607944618295,"results":"55","hashOfConfig":"44"},{"size":263,"mtime":1607943752754,"results":"56","hashOfConfig":"44"},{"size":1117,"mtime":1607919160213,"results":"57","hashOfConfig":"44"},{"size":1395,"mtime":1608097482300,"results":"58","hashOfConfig":"44"},{"size":253,"mtime":1607689134909,"results":"59","hashOfConfig":"44"},{"size":3491,"mtime":1608268046972,"results":"60","hashOfConfig":"44"},{"size":4003,"mtime":1607941956000,"results":"61","hashOfConfig":"44"},{"size":490,"mtime":1607941956000,"results":"62","hashOfConfig":"44"},{"size":1307,"mtime":1607407885232,"results":"63","hashOfConfig":"44"},{"size":147,"mtime":1607407885230,"results":"64","hashOfConfig":"44"},{"size":2564,"mtime":1607946718913,"results":"65","hashOfConfig":"44"},{"size":2384,"mtime":1607407885241,"results":"66","hashOfConfig":"44"},{"size":3400,"mtime":1607407885227,"results":"67","hashOfConfig":"44"},{"size":2592,"mtime":1607407885225,"results":"68","hashOfConfig":"44"},{"size":2278,"mtime":1607407885243,"results":"69","hashOfConfig":"44"},{"size":1117,"mtime":1607930100383,"results":"70","hashOfConfig":"44"},{"size":551,"mtime":1607938888336,"results":"71","hashOfConfig":"44"},{"size":272,"mtime":1607929535030,"results":"72","hashOfConfig":"44"},{"size":1190,"mtime":1607925303762,"results":"73","hashOfConfig":"44"},{"size":388,"mtime":1607929460121,"results":"74","hashOfConfig":"44"},{"size":904,"mtime":1607931286682,"results":"75","hashOfConfig":"44"},{"size":12491,"mtime":1608270568718,"results":"76","hashOfConfig":"44"},{"size":9644,"mtime":1608270560061,"results":"77","hashOfConfig":"44"},{"size":1364,"mtime":1607954230055,"results":"78","hashOfConfig":"44"},{"size":263,"mtime":1607941570363,"results":"79","hashOfConfig":"44"},{"size":461,"mtime":1607407885294,"results":"80","hashOfConfig":"44"},{"size":1585,"mtime":1607407885246,"results":"81","hashOfConfig":"44"},{"size":341,"mtime":1608023021021,"results":"82","hashOfConfig":"44"},{"size":372,"mtime":1608023333138,"results":"83","hashOfConfig":"44"},{"size":1197,"mtime":1607953520515,"results":"84","hashOfConfig":"44"},{"size":306,"mtime":1608180803799,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"z5x4zi",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"88"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\index.js",[],["191","192"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\polyfills.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\App.js",["193"],"import 'devextreme/dist/css/dx.common.css';\r\nimport './themes/generated/theme.base.css';\r\nimport './themes/generated/theme.additional.css';\r\nimport React from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport './dx-styles.scss';\r\nimport LoadPanel from 'devextreme-react/load-panel';\r\nimport { NavigationProvider } from './contexts/navigation';\r\nimport { AuthProvider, useAuth } from './contexts/auth';\r\nimport { useScreenSizeClass } from './utils/media-query';\r\nimport Content from './Content';\r\nimport UnauthenticatedContent from './UnauthenticatedContent';\r\n\r\nfunction App() {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <LoadPanel visible={true} />;\r\n  }\r\n\r\n  if (user) {\r\n    return <Content />;\r\n  }\r\n\r\n  return <UnauthenticatedContent />;\r\n}\r\n\r\nexport default function () {\r\n  const screenSizeClass = useScreenSizeClass();\r\n\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <NavigationProvider>\r\n          <div className={`app ${screenSizeClass}`}>\r\n            <App />\r\n          </div>\r\n        </NavigationProvider>\r\n      </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\reportWebVitals.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\Content.js",["194"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { SideNavOuterToolbar as SideNavBarLayout } from './layouts';\r\nimport { Footer } from './components';\r\nimport routes from './app-routes';\r\n\r\nexport default function() {\r\n  return (\r\n    <SideNavBarLayout title={'State Ministry of Education Reforms - Sri Lanka'}>\r\n      <Switch>\r\n        {routes.map(({ path, component }) => (\r\n          <Route\r\n            exact\r\n            key={path}\r\n            path={path}\r\n            component={component}\r\n          />\r\n        ))}\r\n        <Redirect to={'/home'} />\r\n      </Switch>\r\n      <Footer>\r\n        Copyright © {new Date().getFullYear()} State Ministry of Education Reforms, Sri Lanka.\r\n      </Footer>\r\n    </SideNavBarLayout>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\UnauthenticatedContent.js",["195"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { SingleCard } from './layouts';\r\nimport { LoginForm, ResetPasswordForm, ChangePasswordForm, CreateAccountForm } from './components';\r\n\r\nexport default function () {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/login' >\r\n        <SingleCard title=\"Sign In\">\r\n          <LoginForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/create-account' >\r\n        <SingleCard title=\"Sign Up\">\r\n          <CreateAccountForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/reset-password' >\r\n        <SingleCard\r\n          title=\"Reset Password\"\r\n          description=\"Please enter the email address that you used to register, and we will send you a link to reset your password via Email.\"\r\n        >\r\n          <ResetPasswordForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/change-password/:recoveryCode' >\r\n        <SingleCard title=\"Change Password\">\r\n          <ChangePasswordForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Redirect to={'/login'} />\r\n    </Switch>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\auth.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\navigation.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\media-query.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-routes.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\auth.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\profile.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\index.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\index.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\api.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\index.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js",["196"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js",["197"],"import Button from 'devextreme-react/button';\nimport Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-inner-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\n\nexport default function ({ title, children }) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(MenuStatus.Closed);\n\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-inner-toolbar'}>\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <Header\n            menuToggleEnabled={isXSmall}\n            toggleMenu={toggleMenu}\n          />\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, item => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, item => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n            <Toolbar id={'navigation-header'}>\n              {\n                !isXSmall &&\n                <Item\n                  location={'before'}\n                  cssClass={'menu-button'}\n                >\n                  <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n                </Item>\n              }\n              <Item location={'before'} cssClass={'header-title'} text={title} />\n            </Toolbar>\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\single-card\\single-card.js",["198"],"import React from 'react';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport './single-card.scss';\n\nexport default ({ title, description, children }) => (\n  <ScrollView height={'100%'} width={'100%'} className={'with-footer single-card'}>\n    <div className={'dx-card content'}>\n      <div className={'header'}>\n        <div className={'title'}>{title}</div>\n        <div className={'description'}>{description}</div>\n      </div>\n      {children}\n    </div>\n  </ScrollView>\n);\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\header\\header.js",["199"],"import React from 'react';\r\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\r\nimport Button from 'devextreme-react/button';\r\nimport UserPanel from '../user-panel/user-panel';\r\nimport './header.scss';\r\nimport { Template } from 'devextreme-react/core/template';\r\n\r\nexport default ({ menuToggleEnabled, title, toggleMenu }) => (\r\n  <header className={'header-component'}>\r\n    <Toolbar className={'header-toolbar'}>\r\n      <Item\r\n        visible={menuToggleEnabled}\r\n        location={'before'}\r\n        widget={'dxButton'}\r\n        cssClass={'menu-button'}\r\n      >\r\n        <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\r\n      </Item>\r\n      <Item\r\n        location={'before'}\r\n        cssClass={'header-title'}\r\n        text={title}\r\n        visible={!!title}\r\n      />\r\n      <Item\r\n        location={'after'}\r\n        locateInMenu={'auto'}\r\n        menuItemTemplate={'userPanelTemplate'}\r\n      >\r\n        <Button\r\n          className={'user-button authorization'}\r\n          width={210}\r\n          height={'100%'}\r\n          stylingMode={'text'}\r\n        >\r\n          <UserPanel menuMode={'context'} />\r\n        </Button>\r\n      </Item>\r\n      <Template name={'userPanelTemplate'}>\r\n        <UserPanel menuMode={'list'} />\r\n      </Template>\r\n    </Toolbar>\r\n  </header>\r\n);\r\n\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\footer\\footer.js",["200"],"import React from 'react';\r\nimport './footer.scss';\r\n\r\nexport default ({ ...rest }) => {\r\n  return <footer className={'footer'} {...rest} />;\r\n};\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\login-form\\login-form.js",["201","202"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form, { Item, Label, ButtonItem, ButtonOptions, RequiredRule } from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { useAuth } from '../../contexts/auth';\r\n\r\nimport './login-form.scss';\r\n\r\nexport default function () {\r\n  const { signIn } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await signIn(username, password);\r\n    if (!result.isOk) {\r\n      setLoading(false);\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [signIn]);\r\n\r\n  return (\r\n    <form className={'login-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'username'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Username is required\" />\r\n          {/* <EmailRule message=\"Username is invalid\" /> */}\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'rememberMe'}\r\n          editorType={'dxCheckBox'}\r\n          editorOptions={rememberMeEditorOptions}\r\n        >\r\n          <Label visible={false} />\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Sign In'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Username', mode: 'text' };\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\r\nconst rememberMeEditorOptions = { text: 'Remember me', elementAttr: { class: 'form-text' } };\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\reset-password-form\\reset-password-form.js",["203"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  EmailRule\r\n} from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { resetPassword } from '../../api/auth';\r\nimport './reset-password-form.scss';\r\n\r\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\r\n\r\nexport default function (props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { email } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await resetPassword(email);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n      notify(notificationText, 'success', 2500);\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <form className={'reset-password-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'email'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Email is required\" />\r\n          <EmailRule message=\"Email is invalid\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            elementAttr={submitButtonAttributes}\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Reset my password'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n        <Item>\r\n          <div className={'login-link'}>\r\n            Return to <Link to={'/login'}>Sign In</Link>\r\n          </div>\r\n        </Item>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\r\nconst submitButtonAttributes = { class: 'submit-button' };\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\create-account-form\\create-account-form.js",["204"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  CustomRule,\r\n  EmailRule\r\n} from 'devextreme-react/form';\r\nimport notify from 'devextreme/ui/notify';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport { createAccount } from '../../api/auth';\r\nimport './create-account-form.scss';\r\n\r\nexport default function (props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await createAccount(email, password);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history]);\r\n\r\n  const confirmPassword = useCallback(\r\n    ({ value }) => value === formData.current.password,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form className={'create-account-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'email'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Email is required\" />\r\n          <EmailRule message=\"Email is invalid\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'confirmedPassword'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={confirmedPasswordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <CustomRule\r\n            message={'Passwords do not match'}\r\n            validationCallback={confirmPassword}\r\n          />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item>\r\n          <div className='policy-info'>\r\n            By creating an account, you agree to the <Link to=\"#\">Terms of Service</Link> and <Link to=\"#\">Privacy Policy</Link>\r\n          </div>\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Create a new account'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n        <Item>\r\n          <div className={'login-link'}>\r\n            Have an account? <Link to={'/login'}>Sign In</Link>\r\n          </div>\r\n        </Item>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\r\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\change-password-form\\change-password-form.js",["205"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  CustomRule,\r\n} from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { changePassword } from '../../api/auth';\r\n\r\nexport default function (props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n  const { recoveryCode } = useParams();\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { password } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await changePassword(password, recoveryCode);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history, recoveryCode]);\r\n\r\n  const confirmPassword = useCallback(\r\n    ({ value }) => value === formData.current.password,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'confirmedPassword'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={confirmedPasswordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <CustomRule\r\n            message={'Passwords do not match'}\r\n            validationCallback={confirmPassword}\r\n          />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Continue'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\r\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\side-navigation-menu\\side-navigation-menu.js",["206"],"import React, { useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport TreeView from 'devextreme-react/tree-view';\r\nimport { navigation } from '../../app-navigation';\r\nimport { useNavigation } from '../../contexts/navigation';\r\nimport { useScreenSize } from '../../utils/media-query';\r\nimport './side-navigation-menu.scss';\r\n\r\nimport * as events from 'devextreme/events';\r\n\r\nexport default function (props) {\r\n  const {\r\n    children,\r\n    selectedItemChanged,\r\n    openMenu,\r\n    compactMode,\r\n    onMenuReady\r\n  } = props;\r\n\r\n  const { isLarge } = useScreenSize();\r\n  function normalizePath () {    \r\n    return navigation.map((item) => {\r\n      if(item.path && !(/^\\//.test(item.path))){ \r\n        item.path = `/${item.path}`;\r\n      }\r\n      return {...item, expanded: isLarge}; \r\n    });\r\n  }\r\n\r\n  const items = useMemo(\r\n    normalizePath,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const { navigationData: { currentPath } } = useNavigation();\r\n\r\n  const treeViewRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const getWrapperRef = useCallback((element) => {\r\n    const prevElement = wrapperRef.current;\r\n    if (prevElement) {\r\n      events.off(prevElement, 'dxclick');\r\n    }\r\n\r\n    wrapperRef.current = element;\r\n    events.on(element, 'dxclick', e => {\r\n      openMenu(e);\r\n    });\r\n  }, [openMenu]);\r\n\r\n  useEffect(() => {\r\n    const treeView = treeViewRef.current && treeViewRef.current.instance;\r\n    if (!treeView) {\r\n      return;\r\n    }\r\n\r\n    if (currentPath !== undefined) {\r\n      treeView.selectItem(currentPath);\r\n      treeView.expandItem(currentPath);\r\n    }\r\n\r\n    if (compactMode) {\r\n      treeView.collapseAll();\r\n    }\r\n  }, [currentPath, compactMode]);\r\n\r\n  return (\r\n    <div\r\n      className={'dx-swatch-additional side-navigation-menu'}\r\n      ref={getWrapperRef}\r\n    >\r\n      {children}\r\n      <div className={'menu-container'}>\r\n        <TreeView\r\n          ref={treeViewRef}\r\n          items={items}\r\n          keyExpr={'path'}\r\n          selectionMode={'single'}\r\n          focusStateEnabled={false}\r\n          expandEvent={'click'}\r\n          onItemClick={selectedItemChanged}\r\n          onContentReady={onMenuReady}\r\n          width={'100%'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewChannelsComponent\\ViewChannelsComponent.js",["207"],"import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'devextreme-react/button';\r\n\r\nimport './ViewChannelsComponent.scss'\r\n\r\nexport default function ViewChannelsComponent (props) {\r\n  const { data, channels } = props;\r\n\r\n  const [view, setView] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let view = [];\r\n\r\n    channels.forEach(channel_id => {\r\n      view.push(<div key={channel_id} className={'channel'}>{data[channel_id]}</div>)\r\n    });\r\n    \r\n    setView(view);\r\n  }, []);\r\n\r\n  if(!channels.length) {\r\n    return <div className={'not-available'}>N/A</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{showList ?\r\n        <div>\r\n          <div className={'channels-container'}>{view}</div>\r\n          <div className={'btn'} onClick={() => setShowList(false)}>Hide</div>\r\n        </div>\r\n        : \r\n        <Button\r\n          text={\"View (\" + channels.length + \")\"}\r\n          elementAttr={{ class: \"view-button\" }}\r\n          stylingMode=\"contained\"\r\n          onClick={() => setShowList(true)}\r\n        />\r\n      }</div>\r\n    </div>\r\n  )\r\n}","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditOptionComponent\\EditOptionComponent.js",["208"],"import React, { useCallback } from 'react';\r\nimport SelectBox from 'devextreme-react/select-box';\r\n\r\nimport './EditOptionComponent.scss'\r\n\r\nexport default function EditOptionComponent (props) {\r\n  const onValueChange = useCallback(\r\n    (value) => { props.data.setValue(value) }, []\r\n  )  \r\n\r\n  return (\r\n    <SelectBox\r\n      items={props.data.column.lookup.dataSource}\r\n      valueExpr=\"id\"\r\n      displayExpr=\"name\"\r\n      placeholder=\"Select\"\r\n      value={props.value}\r\n      onValueChange={onValueChange}\r\n      showClearButton={true} />\r\n  )\r\n}","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewOptionComponent\\ViewOptionComponent.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditBooleanComponent\\EditBooleanComponent.js",["209","210","211","212"],"import React, { useEffect, useState, useCallback } from 'react';\r\n\r\nimport './EditBooleanComponent.scss'\r\n\r\nexport default function EditBooleanComponent (props) {\r\n  const defaultValue = props.data.value;\r\n\r\n  const [classNameYes, setClassNameYes] = useState('bool');\r\n  const [classNameNo, setClassNameNo] = useState('bool');\r\n\r\n  useEffect(() => {\r\n    if(defaultValue == 'No') {\r\n      setClassNameYes('bool');\r\n      setClassNameNo('bool no');\r\n    }\r\n    else if(defaultValue == 'Yes') {\r\n      setClassNameYes('bool yes');\r\n      setClassNameNo('bool');\r\n    }\r\n    else {\r\n      setClassNameYes('bool');\r\n      setClassNameNo('bool');\r\n    }\r\n  }, [])\r\n\r\n  const onClickYes = () => {\r\n    setClassNameYes('bool yes');\r\n    setClassNameNo('bool');\r\n    setValue(1);\r\n  }\r\n\r\n  const onClickNo = () => {\r\n    setClassNameYes('bool');\r\n    setClassNameNo('bool no');\r\n    setValue(0);\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (value) => { props.data.setValue(value) }, []\r\n  )\r\n\r\n  return (\r\n    <div className={'bool-container'}>\r\n      <div className={classNameYes} onClick={onClickYes}>Yes</div>\r\n      <div className={classNameNo} onClick={onClickNo}>No</div>\r\n    </div>\r\n  )\r\n}","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewBooleanComponent\\ViewBooleanComponent.js",["213","214"],"import React from 'react';\r\n\r\nimport './ViewBooleanComponent.scss'\r\n\r\nexport default function ViewBooleanComponent (props) {\r\n  const { value } = props;\r\n\r\n  if(value == 0 || value == 1) {\r\n    return (\r\n      value ? <div className={'bool-view yes'}>Yes</div> : <div className={'bool-view no'}>No</div>\r\n    )\r\n  }\r\n  else {\r\n    return <div className={'not-available'}>N/A</div>\r\n  }\r\n}","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditChannelsComponent\\EditChannelsComponent.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\students\\students.js",["215"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\institutions\\institutions.js",["216"],"import React, { useState } from 'react';\r\nimport DataGrid, { Column, Pager, Paging, FilterRow, Editing, Lookup } from 'devextreme-react/data-grid';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { Button } from 'devextreme-react/button';\r\nimport notify from 'devextreme/ui/notify';\r\n\r\nimport './institutions.scss';\r\nimport { getInstitutions, setInstitution } from '../../api/institutions';\r\nimport { ViewBooleanComponent, EditBooleanComponent, ViewChannelsComponent, EditChannelsComponent } from '../../components';\r\nimport { TV_CHANNELS, RADIO_CHANNELS } from '../../options';\r\n\r\nexport default function Institutions(props) {\r\n  const [editedRowUpdatedValues, setEditedRowUpdatedValues] = useState(null);\r\n\r\n  const store = new CustomStore({\r\n    key: 'id',\r\n    load: async function() {\r\n      return getInstitutions()\r\n        .then((institutions) => { return institutions })\r\n        .catch(() => notify(\"Internal server error. Failed to fetch data.\", 'error', 3000))\r\n    },\r\n    update: async function() {\r\n      return setInstitution(editedRowUpdatedValues)\r\n        .then((response) => {\r\n          switch(response.status) {\r\n            case 200: notify(\"Updated successfully.\", 'success', 3000); break;\r\n            case 401: notify(\"Unauthorized attempt.\", 'error', 3000); break;\r\n            default : notify(\"Update failed.\", 'error', 3000);\r\n          }\r\n          setEditedRowUpdatedValues(null);\r\n        })\r\n        .catch(() => notify(\"Internal server error. Could not perform update.\", 'error', 3000))\r\n    }\r\n  })\r\n\r\n  const handleOnSaving = (e) => {\r\n    const changes = e.changes[0];\r\n\r\n    if(changes === undefined) {\r\n      notify(\"No changes made. Nothing to update.\", 'info', 3000);\r\n    }\r\n    else{\r\n      const dataSource = e.component.getDataSource();\r\n      const rowData = dataSource._items.filter((object) => object.id === changes.key)[0];\r\n      const updatedValues = getUpdatedValues(changes.data, rowData);\r\n\r\n      if(validateAdditionalData(updatedValues.additional_data)) {\r\n        setEditedRowUpdatedValues(updatedValues);\r\n      }\r\n      else {\r\n        e.cancel = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  const getUpdatedValues = (changes, rowData) => {\r\n    const updatedValues = {\r\n      id: rowData.id,\r\n      additional_data: _updateAdditionalData(changes, rowData),\r\n      tv_channels    : _updateValue(changes, rowData, 'tv_channels') || [],\r\n      radio_channels : _updateValue(changes, rowData, 'radio_channels') || [],\r\n    }\r\n\r\n    return updatedValues;\r\n  }\r\n\r\n  const _updateAdditionalData = (changes, rowData) => {\r\n    const additional_data = [\r\n      'has_internet_connection',\r\n      'has_electricity',\r\n      'has_telephone'\r\n    ]\r\n\r\n    var additionalData = {};\r\n\r\n    additional_data.forEach((key) => {\r\n      additionalData[key] = _updateValue(changes.additional_data, rowData.additional_data, key)\r\n    })\r\n\r\n    return additionalData;\r\n  }\r\n\r\n  const _updateValue = (changes, rowData, key) => {\r\n    if(changes && changes.hasOwnProperty(key)) { return changes[key] }\r\n    if(rowData && rowData.hasOwnProperty(key)) { return rowData[key] }\r\n    return null;\r\n  }\r\n\r\n  const validateAdditionalData = (additional_data) => {\r\n    const { has_internet_connection, has_electricity, has_telephone } = additional_data;\r\n\r\n    let requiredColumns = [];\r\n\r\n    if(has_internet_connection === null) { requiredColumns.push(' Internet') }\r\n    if(has_electricity === null)         { requiredColumns.push(' Electricity') }\r\n    if(has_telephone === null)           { requiredColumns.push(' Telephone') }\r\n\r\n    const requiredColumnsLength = requiredColumns.length;\r\n\r\n    if(requiredColumnsLength) {\r\n      const an = requiredColumnsLength == 1 ? \"an \" : \"\";\r\n      const s = requiredColumnsLength > 1 ? \"s\" : \"\";\r\n      const notification = \"Please select \" + an + \"option\" + s + \" for\" + requiredColumns.toString() + \" column\" + s + \".\";\r\n      \r\n      notify(notification, 'error', 3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className={'content-block'}>Institutions in Colombo Zone</h2>\r\n\r\n      <DataGrid\r\n        className={'dx-card wide-card'}\r\n        dataSource={store}\r\n        showBorders={false}\r\n        focusedRowEnabled={true}\r\n        defaultFocusedRowIndex={0}\r\n        columnAutoWidth={true}\r\n        columnHidingEnabled={true}\r\n        onSaving={handleOnSaving}\r\n        onEditCanceled={() => notify(\"Edit cancelled.\", 'info', 2000)}\r\n      >\r\n        <Paging defaultPageSize={10} />\r\n        <Pager showPageSizeSelector={true} showInfo={true} />\r\n        <FilterRow visible={true} />\r\n        <Editing\r\n          allowUpdating={true}\r\n          allowAdding={false}\r\n          allowDeleting={false}\r\n          mode=\"row\"\r\n        />\r\n\r\n        <Column\r\n          dataField={'code'}\r\n          caption={'Census ID'}\r\n          allowEditing={false}\r\n        />\r\n\r\n        <Column\r\n          dataField={'name'}\r\n          caption={'Name'}\r\n          allowEditing={false}\r\n        />\r\n\r\n        <Column\r\n          dataField={'address'}\r\n          caption={'Address'}\r\n          allowEditing={false}\r\n          allowFiltering={false}\r\n          hidingPriority={5}\r\n        />\r\n\r\n        <Column\r\n          dataField={'postal_code'}\r\n          caption={'Postal Code'}\r\n          hidingPriority={3}\r\n          allowEditing={false}\r\n          allowFiltering={false}\r\n        />\r\n\r\n        <Column\r\n          dataField={'contact_person'}\r\n          caption={'Contact Person'}\r\n          hidingPriority={4}\r\n          allowEditing={false}\r\n          allowFiltering={false}\r\n        />\r\n\r\n        <Column\r\n          dataField={'fax'}\r\n          caption={'Fax'}\r\n          hidingPriority={1}\r\n          allowEditing={false}\r\n          allowFiltering={false}\r\n        />\r\n\r\n        <Column\r\n          dataField={'email'}\r\n          caption={'Email'}\r\n          hidingPriority={2}\r\n          allowEditing={false}\r\n          allowFiltering={false}\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          caption={'Internet'}\r\n          dataField={'additional_data.has_internet_connection'}\r\n          calculateCellValue={(rowData) => { return rowData.additional_data ? rowData.additional_data.has_internet_connection ? 'Yes' : 'No' : null}}\r\n          cellRender={(row) => { return <ViewBooleanComponent value={row.data.additional_data && row.data.additional_data.has_internet_connection}/> }}\r\n          editCellComponent={EditBooleanComponent}\r\n          allowFiltering={false}\r\n        >\r\n          <Lookup dataSource={['Yes', 'No']} />\r\n        </Column>\r\n\r\n        <Column\r\n          width={150}\r\n          caption={'Electricity'}\r\n          dataField={'additional_data.has_electricity'}\r\n          calculateCellValue={(rowData) => { return rowData.additional_data ? rowData.additional_data.has_electricity ? 'Yes' : 'No' : null}}\r\n          cellRender={(row) => { return <ViewBooleanComponent value={row.data.additional_data && row.data.additional_data.has_electricity}/> }}\r\n          editCellComponent={EditBooleanComponent}\r\n          allowFiltering={false}\r\n        >\r\n          <Lookup dataSource={['Yes', 'No']} />\r\n        </Column>\r\n\r\n        <Column\r\n          width={150}\r\n          caption={'Telephone'}\r\n          dataField={'additional_data.has_telephone'}\r\n          calculateCellValue={(rowData) => { return rowData.additional_data ? rowData.additional_data.has_telephone ? 'Yes' : 'No' : null}}\r\n          cellRender={(row) => { return <ViewBooleanComponent value={row.data.additional_data && row.data.additional_data.has_telephone}/> }}\r\n          editCellComponent={EditBooleanComponent}\r\n          allowFiltering={false}\r\n        >\r\n          <Lookup dataSource={['Yes', 'No']} />\r\n        </Column>\r\n\r\n        <Column\r\n          width={200}\r\n          caption={'TV Channels'}\r\n          dataField={'tv_channels'}\r\n          filterOperations={['contains']}\r\n          cellRender={(row) => { return <ViewChannelsComponent data={TV_CHANNELS} channels={row.data.tv_channels}/> }}\r\n          editCellComponent={EditChannelsComponent}\r\n          allowFiltering={false}\r\n        >\r\n          <Lookup\r\n            dataSource={Object.entries(TV_CHANNELS).map(data => { return { id: data[0], name: data[1] }})}\r\n            valueExpr=\"id\"\r\n            displayExpr=\"name\"\r\n          />\r\n        </Column>\r\n\r\n        <Column\r\n          width={200}\r\n          caption={'Radio Channels'}\r\n          dataField={'radio_channels'}\r\n          filterOperations={['contains']}\r\n          cellRender={(row) => { return <ViewChannelsComponent data={RADIO_CHANNELS} channels={row.data.radio_channels}/> }}\r\n          editCellComponent={EditChannelsComponent}\r\n          allowFiltering={false}\r\n        >\r\n          <Lookup\r\n            dataSource={Object.entries(RADIO_CHANNELS).map(data => { return { id: data[0], name: data[1] }})}\r\n            valueExpr=\"id\"\r\n            displayExpr=\"name\"\r\n          />\r\n        </Column>\r\n        \r\n        <Column\r\n          caption={'Students'}\r\n          cellRender={(row) => {\r\n            return (\r\n              <Button\r\n                text=\"View\"\r\n                elementAttr={{ class: \"view-button\" }}\r\n                stylingMode=\"contained\"\r\n                onClick={() => props.history.push({\r\n                  pathname: '/students?institution_id=' + row.data.id,\r\n                  state: { institution_name: row.data.name , classes :row.data.classes }\r\n                })}\r\n              />\r\n            )\r\n          }}\r\n          allowEditing={false}\r\n          allowFiltering={false}\r\n        />\r\n\r\n      </DataGrid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\profile\\profile.js",["217","218"],"import React, { useEffect, useState } from 'react';\r\nimport Form from 'devextreme-react/form';\r\nimport './profile.scss';\r\n\r\nexport default () => {\r\n  const [profile, setProfile] = useState({});\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const data = user.data;\r\n\r\n    const profile = {\r\n      OpenemisID: data.openemis_no,\r\n      FirstName: data.first_name,\r\n      MiddleName: data.middle_name,\r\n      Address: data.address,\r\n      BirthDate: data.date_of_birth,\r\n      LastLogin: data.last_login\r\n    }\r\n\r\n    setProfile(profile);\r\n    setData(data);\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className={'content-block'}>Profile</h2>\r\n\r\n      {Object.keys(profile).length && <div>\r\n        <div className={'content-block dx-card responsive-paddings top-container'}>\r\n          <img className={'avatar'} src={data.avatarUrl} />\r\n        </div>\r\n\r\n        <div className={'content-block dx-card responsive-paddings'}>\r\n          <Form\r\n            readOnly={true}\r\n            id={'form'}\r\n            defaultFormData={profile}\r\n            labelLocation={'top'}\r\n            colCountByScreen={colCountByScreen}\r\n          />\r\n        </div>\r\n      </div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst colCountByScreen = {\r\n  xs: 1,\r\n  sm: 2,\r\n  md: 3,\r\n  lg: 4\r\n};\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-navigation.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\patches.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\user-panel\\user-panel.js",["219","220"],"import React, { useMemo } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ContextMenu, { Position } from 'devextreme-react/context-menu';\r\nimport List from 'devextreme-react/list';\r\nimport { useAuth } from '../../contexts/auth';\r\nimport './user-panel.scss';\r\n\r\nexport default function ({ menuMode }) {\r\n  const { user, signOut } = useAuth();\r\n  const history = useHistory();\r\n\r\n  function navigateToProfile() {\r\n    history.push(\"/profile\");\r\n  }\r\n  const menuItems = useMemo(() => ([\r\n    {\r\n      text: 'Profile',\r\n      icon: 'user',\r\n      onClick: navigateToProfile\r\n    },\r\n    {\r\n      text: 'Logout',\r\n      icon: 'runner',\r\n      onClick: signOut\r\n    }\r\n  ]), [signOut]);\r\n\r\n  return (\r\n    <div className={'user-panel'}>\r\n      <div className={'user-info'}>\r\n        <div className={'image-container'}>\r\n          <div\r\n            style={{\r\n              background: `url(${user.avatarUrl}) no-repeat #fff`,\r\n              backgroundSize: 'cover'\r\n            }}\r\n            className={'user-image'} />\r\n        </div>\r\n        <div className={'user-name'}>{user.email}</div>\r\n      </div>\r\n\r\n      {menuMode === 'context' && (\r\n        <ContextMenu\r\n          items={menuItems}\r\n          target={'.user-button'}\r\n          showEvent={'dxclick'}\r\n          width={210}\r\n          cssClass={'user-menu'}\r\n        >\r\n          <Position my={'top center'} at={'bottom center'} />\r\n        </ContextMenu>\r\n      )}\r\n      {menuMode === 'list' && (\r\n        <List className={'dx-toolbar-menu-action'} items={menuItems} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\institutions.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\students.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\home\\home.js",["221","222"],"import React from 'react';\r\nimport './home.scss';\r\n\r\nexport default () => (\r\n  <React.Fragment>\r\n    <h2 className={'content-block'}>Home</h2>\r\n    <div className={'content-block'}>\r\n      <div className={'dx-card responsive-paddings'}>\r\n        <div className={'logos-container'}>\r\n          <img className={'state-emblem'} src={'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5f/Emblem_of_Sri_Lanka.svg/1200px-Emblem_of_Sri_Lanka.svg.png'} />\r\n        </div>\r\n\r\n        <h6>\r\n          To ensure students in Sri Lanka continue to receive an education during the COVID-19 pandemic period,\r\n          the State Ministry of Education Reforms has endeavored to roll out a comprehensive distance learning program.\r\n        </h6>\r\n\r\n        <h6>\r\n          To commence their work, the Ministry of Education requires some baseline information about students,\r\n          their families and the possible media through which lessons can take place in addition to online learning\r\n          such as radio and tv which may be more accessible to students who cannot access strong internet bandwidth\r\n          connections.\r\n        </h6>\r\n        \r\n      </div>\r\n    </div>\r\n  </React.Fragment>\r\n);\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\options\\index.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":28,"column":1,"nodeType":"229","endLine":42,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":7,"column":1,"nodeType":"229","endLine":26,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":6,"column":1,"nodeType":"229","endLine":35,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":11,"column":1,"nodeType":"229","endLine":104,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":13,"column":1,"nodeType":"229","endLine":116,"endColumn":2},{"ruleId":"227","severity":1,"message":"230","line":5,"column":1,"nodeType":"229","endLine":15,"endColumn":3},{"ruleId":"227","severity":1,"message":"230","line":8,"column":1,"nodeType":"229","endLine":44,"endColumn":3},{"ruleId":"227","severity":1,"message":"230","line":4,"column":1,"nodeType":"229","endLine":6,"endColumn":3},{"ruleId":"231","severity":1,"message":"232","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":20},{"ruleId":"227","severity":1,"message":"228","line":10,"column":1,"nodeType":"229","endLine":72,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":18,"column":1,"nodeType":"229","endLine":75,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":17,"column":1,"nodeType":"229","endLine":102,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":15,"column":1,"nodeType":"229","endLine":82,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":10,"column":1,"nodeType":"229","endLine":88,"endColumn":2},{"ruleId":"235","severity":1,"message":"236","line":20,"column":6,"nodeType":"237","endLine":20,"endColumn":8,"suggestions":"238"},{"ruleId":"235","severity":1,"message":"239","line":8,"column":48,"nodeType":"237","endLine":8,"endColumn":50,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":12,"column":21,"nodeType":"243","messageId":"244","endLine":12,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":16,"column":26,"nodeType":"243","messageId":"244","endLine":16,"endColumn":28},{"ruleId":"235","severity":1,"message":"245","line":24,"column":6,"nodeType":"237","endLine":24,"endColumn":8,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"239","line":39,"column":48,"nodeType":"237","endLine":39,"endColumn":50,"suggestions":"247"},{"ruleId":"241","severity":1,"message":"242","line":8,"column":12,"nodeType":"243","messageId":"244","endLine":8,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":8,"column":26,"nodeType":"243","messageId":"244","endLine":8,"endColumn":28},{"ruleId":"241","severity":1,"message":"242","line":122,"column":40,"nodeType":"243","messageId":"244","endLine":122,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":101,"column":40,"nodeType":"243","messageId":"244","endLine":101,"endColumn":42},{"ruleId":"227","severity":1,"message":"230","line":5,"column":1,"nodeType":"229","endLine":47,"endColumn":3},{"ruleId":"248","severity":1,"message":"249","line":32,"column":11,"nodeType":"250","endLine":32,"endColumn":60},{"ruleId":"227","severity":1,"message":"228","line":8,"column":1,"nodeType":"229","endLine":58,"endColumn":2},{"ruleId":"235","severity":1,"message":"251","line":26,"column":7,"nodeType":"237","endLine":26,"endColumn":16,"suggestions":"252"},{"ruleId":"227","severity":1,"message":"230","line":4,"column":1,"nodeType":"229","endLine":28,"endColumn":3},{"ruleId":"248","severity":1,"message":"249","line":10,"column":11,"nodeType":"250","endLine":10,"endColumn":170},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'channels' and 'data'. Either include them or remove the dependency array.","ArrayExpression",["255"],"React Hook useCallback has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["256"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'defaultValue'. Either include it or remove the dependency array.",["257"],["258"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useMemo has a missing dependency: 'navigateToProfile'. Either include it or remove the dependency array.",["259"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"262","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [channels, data]",{"range":"269","text":"270"},"Update the dependencies array to be: [props.data]",{"range":"271","text":"272"},"Update the dependencies array to be: [defaultValue]",{"range":"273","text":"274"},{"range":"275","text":"272"},"Update the dependencies array to be: [navigateToProfile, signOut]",{"range":"276","text":"277"},[546,548],"[channels, data]",[280,282],"[props.data]",[655,657],"[defaultValue]",[976,978],[692,701],"[navigateToProfile, signOut]"]