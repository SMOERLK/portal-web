[{"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\index.js":"1","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\polyfills.js":"2","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\App.js":"3","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\reportWebVitals.js":"4","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\Content.js":"5","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\UnauthenticatedContent.js":"6","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\navigation.js":"7","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\media-query.js":"8","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\auth.js":"9","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-routes.js":"10","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\auth.js":"11","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\index.js":"12","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\index.js":"13","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\index.js":"14","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\footer\\footer.js":"15","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\header\\header.js":"16","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\create-account-form\\create-account-form.js":"17","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\change-password-form\\change-password-form.js":"18","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\side-navigation-menu\\side-navigation-menu.js":"19","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\login-form\\login-form.js":"20","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\reset-password-form\\reset-password-form.js":"21","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\home\\home.js":"22","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\patches.js":"23","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-navigation.js":"24","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\user-panel\\user-panel.js":"25","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\profile\\profile.js":"26","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\multiple-data-reducer\\multiple-data-reducer.js":"27","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewChannelsComponent\\ViewChannelsComponent.js":"28","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditChannelsComponent\\EditChannelsComponent.js":"29","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\api.js":"30","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\institutions\\institutions.js":"31","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\institutions.js":"32","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\students\\students.js":"33","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\students.js":"34","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\options\\index.js":"35","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewBooleanComponent\\ViewBooleanComponent.js":"36","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditBooleanComponent\\EditBooleanComponent.js":"37","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewOptionComponent\\ViewOptionComponent.js":"38","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditOptionComponent\\EditOptionComponent.js":"39","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js":"40","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\single-card\\single-card.js":"41","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js":"42","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\profile.js":"43"},{"size":540,"mtime":1607407885254,"results":"44","hashOfConfig":"45"},{"size":72,"mtime":1607407885269,"results":"46","hashOfConfig":"45"},{"size":1134,"mtime":1607407885216,"results":"47","hashOfConfig":"45"},{"size":375,"mtime":1607407885269,"results":"48","hashOfConfig":"45"},{"size":788,"mtime":1607941799141,"results":"49","hashOfConfig":"45"},{"size":1147,"mtime":1607407885218,"results":"50","hashOfConfig":"45"},{"size":839,"mtime":1607407885251,"results":"51","hashOfConfig":"45"},{"size":1581,"mtime":1607407885294,"results":"52","hashOfConfig":"45"},{"size":1469,"mtime":1607949164947,"results":"53","hashOfConfig":"45"},{"size":587,"mtime":1607740534364,"results":"54","hashOfConfig":"45"},{"size":1692,"mtime":1607945618997,"results":"55","hashOfConfig":"45"},{"size":1117,"mtime":1607919160213,"results":"56","hashOfConfig":"45"},{"size":263,"mtime":1607943752754,"results":"57","hashOfConfig":"45"},{"size":253,"mtime":1607689134909,"results":"58","hashOfConfig":"45"},{"size":147,"mtime":1607407885230,"results":"59","hashOfConfig":"45"},{"size":1307,"mtime":1607407885232,"results":"60","hashOfConfig":"45"},{"size":3400,"mtime":1607407885227,"results":"61","hashOfConfig":"45"},{"size":2592,"mtime":1607407885225,"results":"62","hashOfConfig":"45"},{"size":2278,"mtime":1607407885243,"results":"63","hashOfConfig":"45"},{"size":2564,"mtime":1607946718913,"results":"64","hashOfConfig":"45"},{"size":2384,"mtime":1607407885241,"results":"65","hashOfConfig":"45"},{"size":1197,"mtime":1607953520515,"results":"66","hashOfConfig":"45"},{"size":461,"mtime":1607407885294,"results":"67","hashOfConfig":"45"},{"size":263,"mtime":1607941570363,"results":"68","hashOfConfig":"45"},{"size":1585,"mtime":1607407885246,"results":"69","hashOfConfig":"45"},{"size":1364,"mtime":1607954230055,"results":"70","hashOfConfig":"45"},{"size":893,"mtime":1607495110834,"results":"71","hashOfConfig":"45"},{"size":1117,"mtime":1607930100383,"results":"72","hashOfConfig":"45"},{"size":904,"mtime":1607931286682,"results":"73","hashOfConfig":"45"},{"size":1451,"mtime":1608030069154,"results":"74","hashOfConfig":"45"},{"size":8180,"mtime":1608022509854,"results":"75","hashOfConfig":"45"},{"size":341,"mtime":1608023021021,"results":"76","hashOfConfig":"45"},{"size":10967,"mtime":1608025634850,"results":"77","hashOfConfig":"45"},{"size":372,"mtime":1608023333138,"results":"78","hashOfConfig":"45"},{"size":306,"mtime":1607938089438,"results":"79","hashOfConfig":"45"},{"size":388,"mtime":1607929460121,"results":"80","hashOfConfig":"45"},{"size":1190,"mtime":1607925303762,"results":"81","hashOfConfig":"45"},{"size":272,"mtime":1607929535030,"results":"82","hashOfConfig":"45"},{"size":551,"mtime":1607938888336,"results":"83","hashOfConfig":"45"},{"size":3491,"mtime":1607946318146,"results":"84","hashOfConfig":"45"},{"size":490,"mtime":1607941956000,"results":"85","hashOfConfig":"45"},{"size":4003,"mtime":1607941956000,"results":"86","hashOfConfig":"45"},{"size":173,"mtime":1607944618295,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"z5x4zi",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\index.js",[],["188","189"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\polyfills.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\App.js",["190"],"import 'devextreme/dist/css/dx.common.css';\r\nimport './themes/generated/theme.base.css';\r\nimport './themes/generated/theme.additional.css';\r\nimport React from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport './dx-styles.scss';\r\nimport LoadPanel from 'devextreme-react/load-panel';\r\nimport { NavigationProvider } from './contexts/navigation';\r\nimport { AuthProvider, useAuth } from './contexts/auth';\r\nimport { useScreenSizeClass } from './utils/media-query';\r\nimport Content from './Content';\r\nimport UnauthenticatedContent from './UnauthenticatedContent';\r\n\r\nfunction App() {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <LoadPanel visible={true} />;\r\n  }\r\n\r\n  if (user) {\r\n    return <Content />;\r\n  }\r\n\r\n  return <UnauthenticatedContent />;\r\n}\r\n\r\nexport default function () {\r\n  const screenSizeClass = useScreenSizeClass();\r\n\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <NavigationProvider>\r\n          <div className={`app ${screenSizeClass}`}>\r\n            <App />\r\n          </div>\r\n        </NavigationProvider>\r\n      </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\reportWebVitals.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\Content.js",["191"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\UnauthenticatedContent.js",["192"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { SingleCard } from './layouts';\r\nimport { LoginForm, ResetPasswordForm, ChangePasswordForm, CreateAccountForm } from './components';\r\n\r\nexport default function () {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/login' >\r\n        <SingleCard title=\"Sign In\">\r\n          <LoginForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/create-account' >\r\n        <SingleCard title=\"Sign Up\">\r\n          <CreateAccountForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/reset-password' >\r\n        <SingleCard\r\n          title=\"Reset Password\"\r\n          description=\"Please enter the email address that you used to register, and we will send you a link to reset your password via Email.\"\r\n        >\r\n          <ResetPasswordForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/change-password/:recoveryCode' >\r\n        <SingleCard title=\"Change Password\">\r\n          <ChangePasswordForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Redirect to={'/login'} />\r\n    </Switch>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\navigation.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\media-query.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\contexts\\auth.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-routes.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\auth.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\index.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\index.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\index.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\footer\\footer.js",["193"],"import React from 'react';\r\nimport './footer.scss';\r\n\r\nexport default ({ ...rest }) => {\r\n  return <footer className={'footer'} {...rest} />;\r\n};\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\header\\header.js",["194"],"import React from 'react';\r\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\r\nimport Button from 'devextreme-react/button';\r\nimport UserPanel from '../user-panel/user-panel';\r\nimport './header.scss';\r\nimport { Template } from 'devextreme-react/core/template';\r\n\r\nexport default ({ menuToggleEnabled, title, toggleMenu }) => (\r\n  <header className={'header-component'}>\r\n    <Toolbar className={'header-toolbar'}>\r\n      <Item\r\n        visible={menuToggleEnabled}\r\n        location={'before'}\r\n        widget={'dxButton'}\r\n        cssClass={'menu-button'}\r\n      >\r\n        <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\r\n      </Item>\r\n      <Item\r\n        location={'before'}\r\n        cssClass={'header-title'}\r\n        text={title}\r\n        visible={!!title}\r\n      />\r\n      <Item\r\n        location={'after'}\r\n        locateInMenu={'auto'}\r\n        menuItemTemplate={'userPanelTemplate'}\r\n      >\r\n        <Button\r\n          className={'user-button authorization'}\r\n          width={210}\r\n          height={'100%'}\r\n          stylingMode={'text'}\r\n        >\r\n          <UserPanel menuMode={'context'} />\r\n        </Button>\r\n      </Item>\r\n      <Template name={'userPanelTemplate'}>\r\n        <UserPanel menuMode={'list'} />\r\n      </Template>\r\n    </Toolbar>\r\n  </header>\r\n);\r\n\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\create-account-form\\create-account-form.js",["195"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  CustomRule,\r\n  EmailRule\r\n} from 'devextreme-react/form';\r\nimport notify from 'devextreme/ui/notify';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport { createAccount } from '../../api/auth';\r\nimport './create-account-form.scss';\r\n\r\nexport default function (props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await createAccount(email, password);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history]);\r\n\r\n  const confirmPassword = useCallback(\r\n    ({ value }) => value === formData.current.password,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form className={'create-account-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'email'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Email is required\" />\r\n          <EmailRule message=\"Email is invalid\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'confirmedPassword'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={confirmedPasswordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <CustomRule\r\n            message={'Passwords do not match'}\r\n            validationCallback={confirmPassword}\r\n          />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item>\r\n          <div className='policy-info'>\r\n            By creating an account, you agree to the <Link to=\"#\">Terms of Service</Link> and <Link to=\"#\">Privacy Policy</Link>\r\n          </div>\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Create a new account'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n        <Item>\r\n          <div className={'login-link'}>\r\n            Have an account? <Link to={'/login'}>Sign In</Link>\r\n          </div>\r\n        </Item>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\r\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\change-password-form\\change-password-form.js",["196"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  CustomRule,\r\n} from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { changePassword } from '../../api/auth';\r\n\r\nexport default function (props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n  const { recoveryCode } = useParams();\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { password } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await changePassword(password, recoveryCode);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history, recoveryCode]);\r\n\r\n  const confirmPassword = useCallback(\r\n    ({ value }) => value === formData.current.password,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'confirmedPassword'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={confirmedPasswordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <CustomRule\r\n            message={'Passwords do not match'}\r\n            validationCallback={confirmPassword}\r\n          />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Continue'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\r\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\side-navigation-menu\\side-navigation-menu.js",["197"],"import React, { useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport TreeView from 'devextreme-react/tree-view';\r\nimport { navigation } from '../../app-navigation';\r\nimport { useNavigation } from '../../contexts/navigation';\r\nimport { useScreenSize } from '../../utils/media-query';\r\nimport './side-navigation-menu.scss';\r\n\r\nimport * as events from 'devextreme/events';\r\n\r\nexport default function (props) {\r\n  const {\r\n    children,\r\n    selectedItemChanged,\r\n    openMenu,\r\n    compactMode,\r\n    onMenuReady\r\n  } = props;\r\n\r\n  const { isLarge } = useScreenSize();\r\n  function normalizePath () {    \r\n    return navigation.map((item) => {\r\n      if(item.path && !(/^\\//.test(item.path))){ \r\n        item.path = `/${item.path}`;\r\n      }\r\n      return {...item, expanded: isLarge}; \r\n    });\r\n  }\r\n\r\n  const items = useMemo(\r\n    normalizePath,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const { navigationData: { currentPath } } = useNavigation();\r\n\r\n  const treeViewRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const getWrapperRef = useCallback((element) => {\r\n    const prevElement = wrapperRef.current;\r\n    if (prevElement) {\r\n      events.off(prevElement, 'dxclick');\r\n    }\r\n\r\n    wrapperRef.current = element;\r\n    events.on(element, 'dxclick', e => {\r\n      openMenu(e);\r\n    });\r\n  }, [openMenu]);\r\n\r\n  useEffect(() => {\r\n    const treeView = treeViewRef.current && treeViewRef.current.instance;\r\n    if (!treeView) {\r\n      return;\r\n    }\r\n\r\n    if (currentPath !== undefined) {\r\n      treeView.selectItem(currentPath);\r\n      treeView.expandItem(currentPath);\r\n    }\r\n\r\n    if (compactMode) {\r\n      treeView.collapseAll();\r\n    }\r\n  }, [currentPath, compactMode]);\r\n\r\n  return (\r\n    <div\r\n      className={'dx-swatch-additional side-navigation-menu'}\r\n      ref={getWrapperRef}\r\n    >\r\n      {children}\r\n      <div className={'menu-container'}>\r\n        <TreeView\r\n          ref={treeViewRef}\r\n          items={items}\r\n          keyExpr={'path'}\r\n          selectionMode={'single'}\r\n          focusStateEnabled={false}\r\n          expandEvent={'click'}\r\n          onItemClick={selectedItemChanged}\r\n          onContentReady={onMenuReady}\r\n          width={'100%'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\login-form\\login-form.js",["198","199"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\reset-password-form\\reset-password-form.js",["200"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  EmailRule\r\n} from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { resetPassword } from '../../api/auth';\r\nimport './reset-password-form.scss';\r\n\r\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\r\n\r\nexport default function (props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { email } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await resetPassword(email);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n      notify(notificationText, 'success', 2500);\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <form className={'reset-password-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'email'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Email is required\" />\r\n          <EmailRule message=\"Email is invalid\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            elementAttr={submitButtonAttributes}\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Reset my password'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n        <Item>\r\n          <div className={'login-link'}>\r\n            Return to <Link to={'/login'}>Sign In</Link>\r\n          </div>\r\n        </Item>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\r\nconst submitButtonAttributes = { class: 'submit-button' };\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\home\\home.js",["201","202"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\utils\\patches.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\app-navigation.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\user-panel\\user-panel.js",["203","204"],"import React, { useMemo } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ContextMenu, { Position } from 'devextreme-react/context-menu';\r\nimport List from 'devextreme-react/list';\r\nimport { useAuth } from '../../contexts/auth';\r\nimport './user-panel.scss';\r\n\r\nexport default function ({ menuMode }) {\r\n  const { user, signOut } = useAuth();\r\n  const history = useHistory();\r\n\r\n  function navigateToProfile() {\r\n    history.push(\"/profile\");\r\n  }\r\n  const menuItems = useMemo(() => ([\r\n    {\r\n      text: 'Profile',\r\n      icon: 'user',\r\n      onClick: navigateToProfile\r\n    },\r\n    {\r\n      text: 'Logout',\r\n      icon: 'runner',\r\n      onClick: signOut\r\n    }\r\n  ]), [signOut]);\r\n\r\n  return (\r\n    <div className={'user-panel'}>\r\n      <div className={'user-info'}>\r\n        <div className={'image-container'}>\r\n          <div\r\n            style={{\r\n              background: `url(${user.avatarUrl}) no-repeat #fff`,\r\n              backgroundSize: 'cover'\r\n            }}\r\n            className={'user-image'} />\r\n        </div>\r\n        <div className={'user-name'}>{user.email}</div>\r\n      </div>\r\n\r\n      {menuMode === 'context' && (\r\n        <ContextMenu\r\n          items={menuItems}\r\n          target={'.user-button'}\r\n          showEvent={'dxclick'}\r\n          width={210}\r\n          cssClass={'user-menu'}\r\n        >\r\n          <Position my={'top center'} at={'bottom center'} />\r\n        </ContextMenu>\r\n      )}\r\n      {menuMode === 'list' && (\r\n        <List className={'dx-toolbar-menu-action'} items={menuItems} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\profile\\profile.js",["205","206"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\multiple-data-reducer\\multiple-data-reducer.js",["207","208"],"import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'devextreme-react/button';\r\n\r\nimport './multiple-data-reducer.scss'\r\n\r\nexport default function (props) {\r\n  const data = [\"Rupavahini\", \"Hiru TV\", \"TV Derana\", \"Sirasa TV\", \"ITN\"];\r\n\r\n  const [view, setView] = useState(false);\r\n  const [showList, setShowList] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setView(\r\n      data.map(element => <div>{element}</div>)\r\n    )\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>{showList ?\r\n        <div>\r\n          {view}\r\n          <div className={'btn-txt'} onClick={() => setShowList(false)}>Hide</div>\r\n        </div>\r\n        : \r\n        <Button\r\n          text={\"View (\" + data.length + \")\"}\r\n          elementAttr={{ class: \"view-button\" }}\r\n          stylingMode=\"contained\"\r\n          onClick={() => setShowList(true)}\r\n        />\r\n      }</div>\r\n    </div>\r\n  )\r\n}","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewChannelsComponent\\ViewChannelsComponent.js",["209"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditChannelsComponent\\EditChannelsComponent.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\api.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\institutions\\institutions.js",["210"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\institutions.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\pages\\students\\students.js",["211"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\students.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\options\\index.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewBooleanComponent\\ViewBooleanComponent.js",["212","213"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditBooleanComponent\\EditBooleanComponent.js",["214","215","216","217"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\ViewOptionComponent\\ViewOptionComponent.js",[],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\components\\EditOptionComponent\\EditOptionComponent.js",["218"],"D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js",["219"],"import Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-outer-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\n\nexport default function ({ title, children }) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(MenuStatus.Closed);\n\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-outer-toolbar'}>\n      <Header\n        className={'layout-header'}\n        menuToggleEnabled\n        toggleMenu={toggleMenu}\n        title={title}\n      />\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, item => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, item => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\single-card\\single-card.js",["220","221"],"import React from 'react';\r\nimport ScrollView from 'devextreme-react/scroll-view';\r\nimport './single-card.scss';\r\n\r\nexport default ({ title, description, children }) => (\r\n  <ScrollView height={'100%'} width={'100%'} className={'with-footer single-card'}>\r\n    <div className={'dx-card content'}>\r\n      <div className={'header'}>\r\n        <div className={'title'}>{title}</div>\r\n        <div className={'description'}>{description}</div>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  </ScrollView>\r\n);\r\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js",["222"],"import Button from 'devextreme-react/button';\nimport Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-inner-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\n\nexport default function ({ title, children }) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(MenuStatus.Closed);\n\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-inner-toolbar'}>\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <Header\n            menuToggleEnabled={isXSmall}\n            toggleMenu={toggleMenu}\n          />\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, item => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, item => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n            <Toolbar id={'navigation-header'}>\n              {\n                !isXSmall &&\n                <Item\n                  location={'before'}\n                  cssClass={'menu-button'}\n                >\n                  <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n                </Item>\n              }\n              <Item location={'before'} cssClass={'header-title'} text={title} />\n            </Toolbar>\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n","D:\\Lanka Software Foundation\\Projects\\MoER\\portal-web\\src\\api\\profile.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":28,"column":1,"nodeType":"229","endLine":42,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":7,"column":1,"nodeType":"229","endLine":26,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":6,"column":1,"nodeType":"229","endLine":35,"endColumn":2},{"ruleId":"227","severity":1,"message":"230","line":4,"column":1,"nodeType":"229","endLine":6,"endColumn":3},{"ruleId":"227","severity":1,"message":"230","line":8,"column":1,"nodeType":"229","endLine":44,"endColumn":3},{"ruleId":"227","severity":1,"message":"228","line":17,"column":1,"nodeType":"229","endLine":102,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":15,"column":1,"nodeType":"229","endLine":82,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":10,"column":1,"nodeType":"229","endLine":88,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":20},{"ruleId":"227","severity":1,"message":"228","line":10,"column":1,"nodeType":"229","endLine":72,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":18,"column":1,"nodeType":"229","endLine":75,"endColumn":2},{"ruleId":"227","severity":1,"message":"230","line":4,"column":1,"nodeType":"229","endLine":28,"endColumn":3},{"ruleId":"235","severity":1,"message":"236","line":10,"column":11,"nodeType":"237","endLine":10,"endColumn":170},{"ruleId":"227","severity":1,"message":"228","line":8,"column":1,"nodeType":"229","endLine":58,"endColumn":2},{"ruleId":"238","severity":1,"message":"239","line":26,"column":7,"nodeType":"240","endLine":26,"endColumn":16,"suggestions":"241"},{"ruleId":"227","severity":1,"message":"230","line":5,"column":1,"nodeType":"229","endLine":47,"endColumn":3},{"ruleId":"235","severity":1,"message":"236","line":32,"column":11,"nodeType":"237","endLine":32,"endColumn":60},{"ruleId":"227","severity":1,"message":"228","line":6,"column":1,"nodeType":"229","endLine":35,"endColumn":2},{"ruleId":"238","severity":1,"message":"242","line":16,"column":6,"nodeType":"240","endLine":16,"endColumn":8,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"244","line":20,"column":6,"nodeType":"240","endLine":20,"endColumn":8,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":51,"column":40,"nodeType":"248","messageId":"249","endLine":51,"endColumn":42},{"ruleId":"246","severity":1,"message":"247","line":54,"column":40,"nodeType":"248","messageId":"249","endLine":54,"endColumn":42},{"ruleId":"246","severity":1,"message":"247","line":8,"column":12,"nodeType":"248","messageId":"249","endLine":8,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":8,"column":26,"nodeType":"248","messageId":"249","endLine":8,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":12,"column":21,"nodeType":"248","messageId":"249","endLine":12,"endColumn":23},{"ruleId":"246","severity":1,"message":"247","line":16,"column":26,"nodeType":"248","messageId":"249","endLine":16,"endColumn":28},{"ruleId":"238","severity":1,"message":"250","line":24,"column":6,"nodeType":"240","endLine":24,"endColumn":8,"suggestions":"251"},{"ruleId":"238","severity":1,"message":"252","line":39,"column":48,"nodeType":"240","endLine":39,"endColumn":50,"suggestions":"253"},{"ruleId":"238","severity":1,"message":"252","line":8,"column":48,"nodeType":"240","endLine":8,"endColumn":50,"suggestions":"254"},{"ruleId":"227","severity":1,"message":"228","line":11,"column":1,"nodeType":"229","endLine":104,"endColumn":2},{"ruleId":"231","severity":1,"message":"255","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":18},{"ruleId":"227","severity":1,"message":"230","line":5,"column":1,"nodeType":"229","endLine":7,"endColumn":3},{"ruleId":"227","severity":1,"message":"228","line":13,"column":1,"nodeType":"229","endLine":116,"endColumn":2},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'navigateToProfile'. Either include it or remove the dependency array.","ArrayExpression",["258"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["259"],"React Hook useEffect has missing dependencies: 'channels' and 'data'. Either include them or remove the dependency array.",["260"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'defaultValue'. Either include it or remove the dependency array.",["261"],"React Hook useCallback has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["262"],["263"],"'ScrollView' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"272","fix":"274"},"Update the dependencies array to be: [navigateToProfile, signOut]",{"range":"275","text":"276"},"Update the dependencies array to be: [data]",{"range":"277","text":"278"},"Update the dependencies array to be: [channels, data]",{"range":"279","text":"280"},"Update the dependencies array to be: [defaultValue]",{"range":"281","text":"282"},"Update the dependencies array to be: [props.data]",{"range":"283","text":"284"},{"range":"285","text":"284"},[692,701],"[navigateToProfile, signOut]",[454,456],"[data]",[546,548],"[channels, data]",[655,657],"[defaultValue]",[976,978],"[props.data]",[280,282]]